[project]
name = "k-test-case"
version = "0.1.0"
description = "Mock data API for test case"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
  "alembic>=1.16.2",
  "asyncpg>=0.30.0",
  "fastapi>=0.115.13",
  "greenlet>=3.2.3",
  "httptools>=0.6.4",
  "pydantic-settings>=2.9.1",
  "sqlakeyset>=2.0.1746777265",
  "sqlalchemy>=2.0.41",
  "uvicorn>=0.34.3",
  "uvloop>=0.21.0 ; sys_platform != 'win32'",
]

[dependency-groups]
dev = [
  "pyright>=1.1.402",
  "ruff>=0.12.0",
  "watchfiles>=1.1.0",
]
fixtures = [ "mimesis>=18.0.0", ]

[tool.ruff]
line-length = 79
preview = true

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
ignore = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107", # Disable enforcing docstrings comments
]
select = [
  "ERA", # Comments
  "FAST", # FastAPI
  "ANN", # Annotations
  "ASYNC", # AsyncIO
  "S", # Security(bandit)
  "BLE", # Disallow BaseException
  "FBT", # Disallow positional bool flags
  "B", # Common bugs(bugbear)
  "A", # Builtins
  "COM818", # Tuple commas
  "C4", # Comprehensions ruless
  "DTZ", # Datetime TZ rules
  "T10", # Disallow breakpoint
  "EM", # Disallow raw string exception to clear out
  "EXE", # Shebang rules
  "ISC", # Strings concat
  "LOG", # Logging rules
  "G", # Logging formatting
  "INP", # Implicit modules namespace
  "PIE", # Misc rules(pie)
  "T20", # Disallow print
  "RSE", # Raise rule
  "RET", # Consistent return rules
  "SLF", # Disallow using private members
  "SIM", # Common simplification rules
  "TID", # Imports rules
  "TC", # Type cheking block rules
  "ARG", # Disallow unused vars
  "PTH", # Enforce use pathlib
  "FLY", # String join lint
  "I", # Import sort
  "C90", # Lint complexity
  "N", # Naming rules
  "PERF", # Perfomance rules
  "E", # Pycodestyle errors
  "W", # Pycodestyle warrnings
  "DOC", # Linting docstrings
  "D", # Docstring style rules
  "F", # Pyflakes rules
  "PGH", # Disallow empty ignore comments
  "PL", # Pylint rules
  "UP", # Pyupgrade rules
  "FURB", # Refactoring rules
  "RUF", # Ruff rules
  "TRY", # Exception handling rules
]
# Disable auto-fix for unused imports
unfixable = [ "F401" ]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [ "directive" ]

[tool.ruff.lint.mccabe]
max-complexity = 6

[tool.ruff.lint.pylint]
allow-dunder-method-names = [ "__tablename__" ]

[tool.pyright]
typeCheckingMode = "strict"
reportImplicitOverride = true
reportUnnecessaryTypeIgnoreComment = true
